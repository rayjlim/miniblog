{% include '_header.twig' %}

<link href="_rsc/css/blog.css" rel="stylesheet" type="text/css">

{% include '_banner.twig' %}
<div class="container">
    <h2>User Login.</h2>
    <form action="." method="post">
        <input type="hidden" name="cmd" value="blog_list" />

         {% if target != "" %}
        <input type="hidden" name="target" value="{{target}}"/>
        {% endif %}
        <div class="form-group">
          <label for="password" class="password-label">Password:</label>
          <input type="password" name="password" value="" id="password" maxlength="15" size="25" class="password">
        </div>
        <input class="btn btn-secondary" type="submit" name="" value="Secret!"  />
    </form>
    <h2>Login via</h2>
    <div>
        <a href="{{githubLoginUrl}}" class="btn btn-success btn-large">Github</a>
        <a href="{{googleLoginUrl}}" class="btn btn-danger btn-large">Google</a>

    <!--
    Below we include the Login Button social plugin. This button uses
    the JavaScript SDK to present a graphical Login button that triggers
    the FB.login() function when clicked.
    -->

    <fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
    </fb:login-button>
    <div id="status">
    </div>
    </div>
</div>
{% include '_footer.twig' %}

<script>
    $(document).ready(()=> {
        $('.password-label').animate({ opacity: "0.4" }).click(function() {
            var thisFor = $(this).attr('for');
            $('.' + thisFor).focus();
        });

        $('.password').focus(function() {
            $('.password-label').animate({ marginLeft: "5em" }, "fast");
            if($(this).val() == "password") {
                $(this).val() == "";
            }
        }).blur(function() {
            if($(this).val() == "") {
                $(this).val() == "password";
                $('.password-label').animate({ marginLeft: "1em" }, "fast");
            }
        });
        $('#password').focus();
    });


  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else {
      // The person is not logged into your app or we are unable to tell.
      document.getElementById('status').innerHTML = 'Please log into this app.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(response => {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = () => {
    FB.init({
      appId      : '{{FB_APP_ID}}',
      cookie     : true,  // enable cookies to allow the server to access
                          // the session
      xfbml      : true,  // parse social plugins on this page
      version    : 'v3.2' // The Graph API version to use for the call
    });

    // Now that we've initialized the JavaScript SDK, we call
    // FB.getLoginStatus().  This function gets the state of the
    // person visiting this page and can return one of three states to
    // the callback you provide.  They can be:
    //
    // 1. Logged into your app ('connected')
    // 2. Logged into Facebook, but not your app ('not_authorized')
    // 3. Not logged into Facebook and can't tell if they are logged into
    //    your app or not.
    //
    // These three cases are handled in the callback function.

    FB.getLoginStatus(response => statusChangeCallback(response));
  };

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', response => {
      console.log('Successful login for: ' + response.name);
      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!'+
        `<a href="/smsblog/posts/">posts</a>`;
    });
  }


    // Load the FB SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "https://connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

</script>
<!-- include stats/analytics -->
{% if not DEVELOPMENT %}
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-39088080-1']);
  _gaq.push(['_setDomainName', 'lilplaytime.com']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<!-- Start of StatCounter Code for Default Guide -->
<script type="text/javascript">
var sc_project=321610;
var sc_invisible=0;
var sc_security="";
var scJsHost = (("https:" == document.location.protocol) ?
"https://secure." : "http://www.");
document.write("<sc"+"ript type='text/javascript' src='" +
scJsHost+
"statcounter.com/counter/counter.js'></"+"script>");
</script>
<noscript><div class="statcounter"><a title="click tracking"
href="http://statcounter.com/" target="_blank"><img
class="statcounter"
src="http://c.statcounter.com/321610/0//0/" alt="click
tracking"></a></div></noscript>
<!-- End of StatCounter Code for Default Guide -->

{% endif %}
<!-- include stats/analytics -->
